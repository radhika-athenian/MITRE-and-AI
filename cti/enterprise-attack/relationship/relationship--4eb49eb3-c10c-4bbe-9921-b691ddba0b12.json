{
    "type": "bundle",
    "id": "bundle--30b14da6-7c3a-4eed-8197-21b4dcfa6e24",
    "spec_version": "2.0",
    "objects": [
        {
            "type": "relationship",
            "id": "relationship--4eb49eb3-c10c-4bbe-9921-b691ddba0b12",
            "created": "2022-03-30T14:26:51.848Z",
            "created_by_ref": "identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5",
            "revoked": false,
            "object_marking_refs": [
                "marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168"
            ],
            "modified": "2025-04-16T22:13:58.346Z",
            "description": "Monitor for data obfuscation methods such as Base64, XOR, or URL encoding in HTTP requests, use of TFTP, FTP, or DNS for data exfiltration, or outbound requests containing encoded strings in GET or POST parameters.\n\nAnalytic 1 - Detecting Encoded Data in Unencrypted Alternative Protocols \n\n<code> (EventCode=3 OR source=\"zeek_http.log\" OR source=\"dns.log\")\n| where (uri_length > 200 OR request_body_length > 5000)\n| eval encoded_data=if(match(uri, \"([A-Za-z0-9+/=]{100,})\") OR match(request_body, \"([A-Za-z0-9+/=]{100,})\"), 1, 0)\n| where encoded_data=1\n| stats count by _time, host, user, uri, request_body_length, risk_score\n| eval risk_score=case(\n    request_body_length > 10000, 9,\n    request_body_length > 5000, 8\n)\n| where risk_score >= 8\n| table host, uri, request_body_length, risk_score</code>",
            "relationship_type": "detects",
            "source_ref": "x-mitre-data-component--3772e279-27d6-477a-9fe3-c6beb363594c",
            "target_ref": "attack-pattern--fb8d023d-45be-47e9-bc51-f56bcae6435b",
            "x_mitre_modified_by_ref": "identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5",
            "x_mitre_deprecated": false,
            "x_mitre_attack_spec_version": "3.2.0"
        }
    ]
}