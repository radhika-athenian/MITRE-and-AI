{
    "type": "bundle",
    "id": "bundle--3692ffd8-df33-41ed-914a-7ad6f7a0c0db",
    "spec_version": "2.0",
    "objects": [
        {
            "modified": "2024-12-18T20:22:48.602Z",
            "name": "Restrict Library Loading",
            "description": "Restricting library loading involves implementing security controls to ensure that only trusted and verified libraries (DLLs, shared objects, etc.) are loaded into processes. Adversaries often abuse Dynamic-Link Library (DLL) Injection, DLL Search Order Hijacking, or LD_PRELOAD mechanisms to execute malicious code by forcing the operating system to load untrusted libraries. This mitigation can be implemented through the following measures: \n\nEnforce Safe Library Loading Practices:\n\n- Enable `SafeDLLSearchMode` on Windows.\n- Restrict `LD_PRELOAD` and `LD_LIBRARY_PATH` usage on Linux systems.\n\nCode Signing Enforcement:\n\n- Require digital signatures for all libraries loaded into processes.\n- Use tools like Signtool, and WDAC to enforce signed DLL execution.\n\nEnvironment Hardening:\n\n- Secure library paths and directories to prevent adversaries from placing rogue libraries.\n- Monitor user-writable directories and system configurations for unauthorized changes.\n\nAudit and Monitor Library Loading:\n\n- Enable `Sysmon` on Windows to monitor for suspicious library loads.\n- Use `auditd` on Linux to monitor shared library paths and configuration file changes.\n\nUse Application Control Solutions:\n\n- Implement AppLocker, WDAC, or SELinux to allow only trusted libraries.\n\n*Tools for Implementation*\n\nWindows-Specific Tools:\n\n- AppLocker: Application whitelisting for DLLs.\n- Windows Defender Application Control (WDAC): Restrict unauthorized library execution.\n- Signtool: Verify and enforce code signing.\n- Sysmon: Monitor DLL load events (Event ID 7).\n\nLinux-Specific Tools:\n\n- auditd: Monitor changes to library paths and critical files.\n- SELinux/AppArmor: Define policies to restrict library loading.\n- ldconfig and chattr: Secure LD configuration files and prevent unauthorized modifications.\n\nCross-Platform Solutions:\n\n- Wazuh or OSSEC: File integrity monitoring for library changes.\n- Tripwire: Detect and alert on unauthorized library modifications.",
            "x_mitre_deprecated": false,
            "x_mitre_domains": [
                "enterprise-attack"
            ],
            "x_mitre_version": "1.1",
            "type": "course-of-action",
            "id": "course-of-action--e8242a33-481c-4891-af63-4cf3e4cf6aff",
            "created": "2019-06-11T17:00:01.740Z",
            "created_by_ref": "identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5",
            "revoked": false,
            "external_references": [
                {
                    "source_name": "mitre-attack",
                    "url": "https://attack.mitre.org/mitigations/M1044",
                    "external_id": "M1044"
                }
            ],
            "object_marking_refs": [
                "marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168"
            ],
            "x_mitre_attack_spec_version": "3.2.0",
            "x_mitre_modified_by_ref": "identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5"
        }
    ]
}