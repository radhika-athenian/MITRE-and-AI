{
    "type": "bundle",
    "id": "bundle--bd6343eb-5e19-4f76-aa6c-6fdb7086ec33",
    "spec_version": "2.0",
    "objects": [
        {
            "modified": "2024-12-18T18:51:02.792Z",
            "name": "Privileged Process Integrity",
            "description": "Privileged Process Integrity focuses on defending highly privileged processes (e.g., system services, antivirus, or authentication processes) from tampering, injection, or compromise by adversaries. These processes often interact with critical components, making them prime targets for techniques like code injection, privilege escalation, and process manipulation. This mitigation can be implemented through the following measures:\n\nProtected Process Mechanisms:\n\n- Enable RunAsPPL on Windows systems to protect LSASS and other critical processes.\n- Use registry modifications to enforce protected process settings: `HKEY_LOCAL_MACHINE\\SYSTEM\\CurrentControlSet\\Control\\Lsa\\RunAsPPL`\n\nAnti-Injection and Memory Protection:\n\n- Enable Control Flow Guard (CFG), DEP, and ASLR to protect against process memory tampering.\n- Deploy endpoint protection tools that actively block process injection attempts.\n\nCode Signing Validation:\n\n- Implement policies for Windows Defender Application Control (WDAC) or AppLocker to enforce execution of signed binaries.\n- Ensure critical processes are signed with valid certificates.\n\nAccess Controls:\n\n- Use DACLs and MIC to limit which users and processes can interact with privileged processes.\n- Disable unnecessary debugging capabilities for high-privileged processes.\n\nKernel-Level Protections:\n\n- Ensure Kernel Patch Protection (PatchGuard) is enabled on Windows systems.\n- Leverage SELinux or AppArmor on Linux to enforce kernel-level security policies.\n\n*Tools for Implementation*\n\nProtected Process Light (PPL):\n\n- RunAsPPL (Windows)\n- Windows Defender Credential Guard\n\nCode Integrity and Signing:\n\n- Windows Defender Application Control (WDAC)\n- AppLocker\n- SELinux/AppArmor (Linux)\n\nMemory Protection:\n\n- Control Flow Guard (CFG), Data Execution Prevention (DEP), ASLR\n\nProcess Isolation/Sandboxing:\n\n- Firejail (Linux Sandbox)\n- Windows Sandbox\n- QEMU/KVM-based isolation\n\nKernel Protection:\n\n- PatchGuard (Windows Kernel Patch Protection)\n- SELinux (Mandatory Access Control for Linux)\n- AppArmor",
            "x_mitre_deprecated": false,
            "x_mitre_domains": [
                "enterprise-attack"
            ],
            "x_mitre_version": "1.2",
            "type": "course-of-action",
            "id": "course-of-action--72dade3e-1cba-4182-b3b3-a77ca52f02a1",
            "created": "2019-06-06T21:08:58.465Z",
            "created_by_ref": "identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5",
            "revoked": false,
            "external_references": [
                {
                    "source_name": "mitre-attack",
                    "url": "https://attack.mitre.org/mitigations/M1025",
                    "external_id": "M1025"
                }
            ],
            "object_marking_refs": [
                "marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168"
            ],
            "x_mitre_attack_spec_version": "3.2.0",
            "x_mitre_modified_by_ref": "identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5"
        }
    ]
}