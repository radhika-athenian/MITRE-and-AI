{
    "type": "bundle",
    "id": "bundle--4be60923-0e02-4e3d-88ef-eca04e0f7318",
    "spec_version": "2.0",
    "objects": [
        {
            "type": "attack-pattern",
            "id": "attack-pattern--ab390887-afc0-4715-826d-b1b167d522ae",
            "created": "2020-05-21T17:43:26.506Z",
            "created_by_ref": "identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5",
            "revoked": false,
            "external_references": [
                {
                    "source_name": "mitre-attack",
                    "url": "https://attack.mitre.org/techniques/T0874",
                    "external_id": "T0874"
                },
                {
                    "source_name": "Enterprise ATT&CK",
                    "description": "Enterprise ATT&CK   Hooking Retrieved. 2019/10/27 ",
                    "url": "https://attack.mitre.org/techniques/T1179/"
                },
                {
                    "source_name": "Nicolas Falliere, Liam O Murchu, Eric Chien February 2011",
                    "description": "Nicolas Falliere, Liam O Murchu, Eric Chien 2011, February W32.Stuxnet Dossier (Version 1.4) Retrieved November 17, 2024.",
                    "url": "https://docs.broadcom.com/doc/security-response-w32-stuxnet-dossier-11-en"
                }
            ],
            "object_marking_refs": [
                "marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168"
            ],
            "modified": "2025-04-15T19:58:56.978Z",
            "name": "Hooking",
            "description": "Adversaries may hook into application programming interface (API) functions used by processes to redirect calls for execution and privilege escalation means. Windows processes often leverage these API functions to perform tasks that require reusable system resources. Windows API functions are typically stored in dynamic-link libraries (DLLs) as exported functions. (Citation: Enterprise ATT&CK)\n\nOne type of hooking seen in ICS involves redirecting calls to these functions via import address table (IAT) hooking. IAT hooking uses modifications to a process IAT, where pointers to imported API functions are stored. (Citation: Nicolas Falliere, Liam O Murchu, Eric Chien February 2011)",
            "kill_chain_phases": [
                {
                    "kill_chain_name": "mitre-ics-attack",
                    "phase_name": "execution"
                },
                {
                    "kill_chain_name": "mitre-ics-attack",
                    "phase_name": "privilege-escalation"
                }
            ],
            "x_mitre_attack_spec_version": "3.2.0",
            "x_mitre_deprecated": false,
            "x_mitre_detection": "",
            "x_mitre_domains": [
                "ics-attack"
            ],
            "x_mitre_is_subtechnique": false,
            "x_mitre_modified_by_ref": "identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5",
            "x_mitre_platforms": [
                "None"
            ],
            "x_mitre_version": "1.2",
            "x_mitre_data_sources": [
                "Process: OS API Execution",
                "Process: Process Metadata"
            ]
        }
    ]
}